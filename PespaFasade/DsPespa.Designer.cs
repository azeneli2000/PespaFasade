//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PespaFasade {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DsPespa")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsPespa : System.Data.DataSet {
        
        private AKSESOREDataTable tableAKSESORE;
        
        private FASADADataTable tableFASADA;
        
        private PROFILEDataTable tablePROFILE;
        
        private PROJEKTE_DATADataTable tablePROJEKTE_DATA;
        
        private PROJEKTEDataTable tablePROJEKTE;
        
        private System.Data.DataRelation relationPROFILE_AKSESORE;
        
        private System.Data.DataRelation relationFASADA_AKSESORE;
        
        private System.Data.DataRelation relationFASADA_PROJEKTE_DATA;
        
        private System.Data.DataRelation relationAKSESORE_PROJEKTE_DATA;
        
        private System.Data.DataRelation relationPROFILE_PROJEKTE_DATA;
        
        private System.Data.DataRelation relationPROJEKTE_PROJEKTE_DATA;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsPespa() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsPespa(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AKSESORE"] != null)) {
                    base.Tables.Add(new AKSESOREDataTable(ds.Tables["AKSESORE"]));
                }
                if ((ds.Tables["FASADA"] != null)) {
                    base.Tables.Add(new FASADADataTable(ds.Tables["FASADA"]));
                }
                if ((ds.Tables["PROFILE"] != null)) {
                    base.Tables.Add(new PROFILEDataTable(ds.Tables["PROFILE"]));
                }
                if ((ds.Tables["PROJEKTE_DATA"] != null)) {
                    base.Tables.Add(new PROJEKTE_DATADataTable(ds.Tables["PROJEKTE_DATA"]));
                }
                if ((ds.Tables["PROJEKTE"] != null)) {
                    base.Tables.Add(new PROJEKTEDataTable(ds.Tables["PROJEKTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AKSESOREDataTable AKSESORE {
            get {
                return this.tableAKSESORE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FASADADataTable FASADA {
            get {
                return this.tableFASADA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROFILEDataTable PROFILE {
            get {
                return this.tablePROFILE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROJEKTE_DATADataTable PROJEKTE_DATA {
            get {
                return this.tablePROJEKTE_DATA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROJEKTEDataTable PROJEKTE {
            get {
                return this.tablePROJEKTE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DsPespa cln = ((DsPespa)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AKSESORE"] != null)) {
                    base.Tables.Add(new AKSESOREDataTable(ds.Tables["AKSESORE"]));
                }
                if ((ds.Tables["FASADA"] != null)) {
                    base.Tables.Add(new FASADADataTable(ds.Tables["FASADA"]));
                }
                if ((ds.Tables["PROFILE"] != null)) {
                    base.Tables.Add(new PROFILEDataTable(ds.Tables["PROFILE"]));
                }
                if ((ds.Tables["PROJEKTE_DATA"] != null)) {
                    base.Tables.Add(new PROJEKTE_DATADataTable(ds.Tables["PROJEKTE_DATA"]));
                }
                if ((ds.Tables["PROJEKTE"] != null)) {
                    base.Tables.Add(new PROJEKTEDataTable(ds.Tables["PROJEKTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAKSESORE = ((AKSESOREDataTable)(base.Tables["AKSESORE"]));
            if ((initTable == true)) {
                if ((this.tableAKSESORE != null)) {
                    this.tableAKSESORE.InitVars();
                }
            }
            this.tableFASADA = ((FASADADataTable)(base.Tables["FASADA"]));
            if ((initTable == true)) {
                if ((this.tableFASADA != null)) {
                    this.tableFASADA.InitVars();
                }
            }
            this.tablePROFILE = ((PROFILEDataTable)(base.Tables["PROFILE"]));
            if ((initTable == true)) {
                if ((this.tablePROFILE != null)) {
                    this.tablePROFILE.InitVars();
                }
            }
            this.tablePROJEKTE_DATA = ((PROJEKTE_DATADataTable)(base.Tables["PROJEKTE_DATA"]));
            if ((initTable == true)) {
                if ((this.tablePROJEKTE_DATA != null)) {
                    this.tablePROJEKTE_DATA.InitVars();
                }
            }
            this.tablePROJEKTE = ((PROJEKTEDataTable)(base.Tables["PROJEKTE"]));
            if ((initTable == true)) {
                if ((this.tablePROJEKTE != null)) {
                    this.tablePROJEKTE.InitVars();
                }
            }
            this.relationPROFILE_AKSESORE = this.Relations["PROFILE_AKSESORE"];
            this.relationFASADA_AKSESORE = this.Relations["FASADA_AKSESORE"];
            this.relationFASADA_PROJEKTE_DATA = this.Relations["FASADA_PROJEKTE_DATA"];
            this.relationAKSESORE_PROJEKTE_DATA = this.Relations["AKSESORE_PROJEKTE_DATA"];
            this.relationPROFILE_PROJEKTE_DATA = this.Relations["PROFILE_PROJEKTE_DATA"];
            this.relationPROJEKTE_PROJEKTE_DATA = this.Relations["PROJEKTE_PROJEKTE_DATA"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DsPespa";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsPespa.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAKSESORE = new AKSESOREDataTable();
            base.Tables.Add(this.tableAKSESORE);
            this.tableFASADA = new FASADADataTable();
            base.Tables.Add(this.tableFASADA);
            this.tablePROFILE = new PROFILEDataTable();
            base.Tables.Add(this.tablePROFILE);
            this.tablePROJEKTE_DATA = new PROJEKTE_DATADataTable();
            base.Tables.Add(this.tablePROJEKTE_DATA);
            this.tablePROJEKTE = new PROJEKTEDataTable();
            base.Tables.Add(this.tablePROJEKTE);
            this.relationPROFILE_AKSESORE = new System.Data.DataRelation("PROFILE_AKSESORE", new System.Data.DataColumn[] {
                        this.tablePROFILE.ID_PROFILIColumn}, new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_PROFILIColumn}, false);
            this.Relations.Add(this.relationPROFILE_AKSESORE);
            this.relationFASADA_AKSESORE = new System.Data.DataRelation("FASADA_AKSESORE", new System.Data.DataColumn[] {
                        this.tableFASADA.ID_FASADAColumn}, new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_FASADAColumn}, false);
            this.Relations.Add(this.relationFASADA_AKSESORE);
            this.relationFASADA_PROJEKTE_DATA = new System.Data.DataRelation("FASADA_PROJEKTE_DATA", new System.Data.DataColumn[] {
                        this.tableFASADA.ID_FASADAColumn}, new System.Data.DataColumn[] {
                        this.tablePROJEKTE_DATA.ID_FASADAColumn}, false);
            this.Relations.Add(this.relationFASADA_PROJEKTE_DATA);
            this.relationAKSESORE_PROJEKTE_DATA = new System.Data.DataRelation("AKSESORE_PROJEKTE_DATA", new System.Data.DataColumn[] {
                        this.tableAKSESORE.ID_AKSESORIColumn}, new System.Data.DataColumn[] {
                        this.tablePROJEKTE_DATA.ID_AKSESOREColumn}, false);
            this.Relations.Add(this.relationAKSESORE_PROJEKTE_DATA);
            this.relationPROFILE_PROJEKTE_DATA = new System.Data.DataRelation("PROFILE_PROJEKTE_DATA", new System.Data.DataColumn[] {
                        this.tablePROFILE.ID_PROFILIColumn}, new System.Data.DataColumn[] {
                        this.tablePROJEKTE_DATA.ID_PROFILEColumn}, false);
            this.Relations.Add(this.relationPROFILE_PROJEKTE_DATA);
            this.relationPROJEKTE_PROJEKTE_DATA = new System.Data.DataRelation("PROJEKTE_PROJEKTE_DATA", new System.Data.DataColumn[] {
                        this.tablePROJEKTE.ID_PROJEKTIColumn}, new System.Data.DataColumn[] {
                        this.tablePROJEKTE_DATA.ID_PROJEKTEColumn}, false);
            this.Relations.Add(this.relationPROJEKTE_PROJEKTE_DATA);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAKSESORE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFASADA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePROFILE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePROJEKTE_DATA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePROJEKTE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DsPespa ds = new DsPespa();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void AKSESORERowChangeEventHandler(object sender, AKSESORERowChangeEvent e);
        
        public delegate void FASADARowChangeEventHandler(object sender, FASADARowChangeEvent e);
        
        public delegate void PROFILERowChangeEventHandler(object sender, PROFILERowChangeEvent e);
        
        public delegate void PROJEKTE_DATARowChangeEventHandler(object sender, PROJEKTE_DATARowChangeEvent e);
        
        public delegate void PROJEKTERowChangeEventHandler(object sender, PROJEKTERowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AKSESOREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_AKSESORI;
            
            private System.Data.DataColumn columnEMER_AKSESORI;
            
            private System.Data.DataColumn columnPERSHKRIM_AKSESORI;
            
            private System.Data.DataColumn columnNJESI_MATESE;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnFORMULA;
            
            private System.Data.DataColumn columnID_PROFILI;
            
            private System.Data.DataColumn columnID_FASADA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESOREDataTable() {
                this.TableName = "AKSESORE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESOREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AKSESOREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESORIColumn {
                get {
                    return this.columnID_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_AKSESORIColumn {
                get {
                    return this.columnEMER_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PERSHKRIM_AKSESORIColumn {
                get {
                    return this.columnPERSHKRIM_AKSESORI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESI_MATESEColumn {
                get {
                    return this.columnNJESI_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FORMULAColumn {
                get {
                    return this.columnFORMULA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROFILIColumn {
                get {
                    return this.columnID_PROFILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FASADAColumn {
                get {
                    return this.columnID_FASADA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow this[int index] {
                get {
                    return ((AKSESORERow)(this.Rows[index]));
                }
            }
            
            public event AKSESORERowChangeEventHandler AKSESORERowChanging;
            
            public event AKSESORERowChangeEventHandler AKSESORERowChanged;
            
            public event AKSESORERowChangeEventHandler AKSESORERowDeleting;
            
            public event AKSESORERowChangeEventHandler AKSESORERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAKSESORERow(AKSESORERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow AddAKSESORERow(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, int NJESI_MATESE, decimal CMIMI, string FORMULA, PROFILERow parentPROFILERowByPROFILE_AKSESORE, FASADARow parentFASADARowByFASADA_AKSESORE) {
                AKSESORERow rowAKSESORERow = ((AKSESORERow)(this.NewRow()));
                rowAKSESORERow.ItemArray = new object[] {
                        null,
                        EMER_AKSESORI,
                        PERSHKRIM_AKSESORI,
                        NJESI_MATESE,
                        CMIMI,
                        FORMULA,
                        parentPROFILERowByPROFILE_AKSESORE[0],
                        parentFASADARowByFASADA_AKSESORE[0]};
                this.Rows.Add(rowAKSESORERow);
                return rowAKSESORERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow FindByID_AKSESORI(int ID_AKSESORI) {
                return ((AKSESORERow)(this.Rows.Find(new object[] {
                            ID_AKSESORI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                AKSESOREDataTable cln = ((AKSESOREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new AKSESOREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_AKSESORI = base.Columns["ID_AKSESORI"];
                this.columnEMER_AKSESORI = base.Columns["EMER_AKSESORI"];
                this.columnPERSHKRIM_AKSESORI = base.Columns["PERSHKRIM_AKSESORI"];
                this.columnNJESI_MATESE = base.Columns["NJESI_MATESE"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnFORMULA = base.Columns["FORMULA"];
                this.columnID_PROFILI = base.Columns["ID_PROFILI"];
                this.columnID_FASADA = base.Columns["ID_FASADA"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_AKSESORI = new System.Data.DataColumn("ID_AKSESORI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORI);
                this.columnEMER_AKSESORI = new System.Data.DataColumn("EMER_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_AKSESORI);
                this.columnPERSHKRIM_AKSESORI = new System.Data.DataColumn("PERSHKRIM_AKSESORI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSHKRIM_AKSESORI);
                this.columnNJESI_MATESE = new System.Data.DataColumn("NJESI_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESI_MATESE);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnFORMULA = new System.Data.DataColumn("FORMULA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMULA);
                this.columnID_PROFILI = new System.Data.DataColumn("ID_PROFILI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROFILI);
                this.columnID_FASADA = new System.Data.DataColumn("ID_FASADA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FASADA);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_AKSESORI}, true));
                this.columnID_AKSESORI.AutoIncrement = true;
                this.columnID_AKSESORI.AllowDBNull = false;
                this.columnID_AKSESORI.Unique = true;
                this.columnEMER_AKSESORI.MaxLength = 50;
                this.columnPERSHKRIM_AKSESORI.MaxLength = 100;
                this.columnFORMULA.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow NewAKSESORERow() {
                return ((AKSESORERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new AKSESORERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(AKSESORERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AKSESORERowChanged != null)) {
                    this.AKSESORERowChanged(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AKSESORERowChanging != null)) {
                    this.AKSESORERowChanging(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AKSESORERowDeleted != null)) {
                    this.AKSESORERowDeleted(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AKSESORERowDeleting != null)) {
                    this.AKSESORERowDeleting(this, new AKSESORERowChangeEvent(((AKSESORERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAKSESORERow(AKSESORERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsPespa ds = new DsPespa();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AKSESOREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FASADADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_FASADA;
            
            private System.Data.DataColumn columnEMER_FASADA;
            
            private System.Data.DataColumn columnNJESI_MATESE;
            
            private System.Data.DataColumn columnCMIMI;
            
            private System.Data.DataColumn columnID_PROFILI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADADataTable() {
                this.TableName = "FASADA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FASADADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FASADADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FASADAColumn {
                get {
                    return this.columnID_FASADA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_FASADAColumn {
                get {
                    return this.columnEMER_FASADA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESI_MATESEColumn {
                get {
                    return this.columnNJESI_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROFILIColumn {
                get {
                    return this.columnID_PROFILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow this[int index] {
                get {
                    return ((FASADARow)(this.Rows[index]));
                }
            }
            
            public event FASADARowChangeEventHandler FASADARowChanging;
            
            public event FASADARowChangeEventHandler FASADARowChanged;
            
            public event FASADARowChangeEventHandler FASADARowDeleting;
            
            public event FASADARowChangeEventHandler FASADARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFASADARow(FASADARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow AddFASADARow(string EMER_FASADA, int NJESI_MATESE, double CMIMI, int ID_PROFILI) {
                FASADARow rowFASADARow = ((FASADARow)(this.NewRow()));
                rowFASADARow.ItemArray = new object[] {
                        null,
                        EMER_FASADA,
                        NJESI_MATESE,
                        CMIMI,
                        ID_PROFILI};
                this.Rows.Add(rowFASADARow);
                return rowFASADARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow FindByID_FASADA(int ID_FASADA) {
                return ((FASADARow)(this.Rows.Find(new object[] {
                            ID_FASADA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                FASADADataTable cln = ((FASADADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new FASADADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_FASADA = base.Columns["ID_FASADA"];
                this.columnEMER_FASADA = base.Columns["EMER_FASADA"];
                this.columnNJESI_MATESE = base.Columns["NJESI_MATESE"];
                this.columnCMIMI = base.Columns["CMIMI"];
                this.columnID_PROFILI = base.Columns["ID_PROFILI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_FASADA = new System.Data.DataColumn("ID_FASADA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FASADA);
                this.columnEMER_FASADA = new System.Data.DataColumn("EMER_FASADA", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_FASADA);
                this.columnNJESI_MATESE = new System.Data.DataColumn("NJESI_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESI_MATESE);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.columnID_PROFILI = new System.Data.DataColumn("ID_PROFILI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROFILI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_FASADA}, true));
                this.columnID_FASADA.AutoIncrement = true;
                this.columnID_FASADA.AllowDBNull = false;
                this.columnID_FASADA.Unique = true;
                this.columnEMER_FASADA.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow NewFASADARow() {
                return ((FASADARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new FASADARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(FASADARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FASADARowChanged != null)) {
                    this.FASADARowChanged(this, new FASADARowChangeEvent(((FASADARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FASADARowChanging != null)) {
                    this.FASADARowChanging(this, new FASADARowChangeEvent(((FASADARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FASADARowDeleted != null)) {
                    this.FASADARowDeleted(this, new FASADARowChangeEvent(((FASADARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FASADARowDeleting != null)) {
                    this.FASADARowDeleting(this, new FASADARowChangeEvent(((FASADARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFASADARow(FASADARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsPespa ds = new DsPespa();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FASADADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROFILEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PROFILI;
            
            private System.Data.DataColumn columnEMER_PROFILI;
            
            private System.Data.DataColumn columnNJESI_MATESE;
            
            private System.Data.DataColumn columnCMIMI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILEDataTable() {
                this.TableName = "PROFILE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROFILEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PROFILEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROFILIColumn {
                get {
                    return this.columnID_PROFILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_PROFILIColumn {
                get {
                    return this.columnEMER_PROFILI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NJESI_MATESEColumn {
                get {
                    return this.columnNJESI_MATESE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMIMIColumn {
                get {
                    return this.columnCMIMI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow this[int index] {
                get {
                    return ((PROFILERow)(this.Rows[index]));
                }
            }
            
            public event PROFILERowChangeEventHandler PROFILERowChanging;
            
            public event PROFILERowChangeEventHandler PROFILERowChanged;
            
            public event PROFILERowChangeEventHandler PROFILERowDeleting;
            
            public event PROFILERowChangeEventHandler PROFILERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPROFILERow(PROFILERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow AddPROFILERow(string EMER_PROFILI, int NJESI_MATESE, double CMIMI) {
                PROFILERow rowPROFILERow = ((PROFILERow)(this.NewRow()));
                rowPROFILERow.ItemArray = new object[] {
                        null,
                        EMER_PROFILI,
                        NJESI_MATESE,
                        CMIMI};
                this.Rows.Add(rowPROFILERow);
                return rowPROFILERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow FindByID_PROFILI(int ID_PROFILI) {
                return ((PROFILERow)(this.Rows.Find(new object[] {
                            ID_PROFILI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PROFILEDataTable cln = ((PROFILEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PROFILEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PROFILI = base.Columns["ID_PROFILI"];
                this.columnEMER_PROFILI = base.Columns["EMER_PROFILI"];
                this.columnNJESI_MATESE = base.Columns["NJESI_MATESE"];
                this.columnCMIMI = base.Columns["CMIMI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PROFILI = new System.Data.DataColumn("ID_PROFILI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROFILI);
                this.columnEMER_PROFILI = new System.Data.DataColumn("EMER_PROFILI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_PROFILI);
                this.columnNJESI_MATESE = new System.Data.DataColumn("NJESI_MATESE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJESI_MATESE);
                this.columnCMIMI = new System.Data.DataColumn("CMIMI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMIMI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PROFILI}, true));
                this.columnID_PROFILI.AutoIncrement = true;
                this.columnID_PROFILI.AllowDBNull = false;
                this.columnID_PROFILI.Unique = true;
                this.columnEMER_PROFILI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow NewPROFILERow() {
                return ((PROFILERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PROFILERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PROFILERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROFILERowChanged != null)) {
                    this.PROFILERowChanged(this, new PROFILERowChangeEvent(((PROFILERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROFILERowChanging != null)) {
                    this.PROFILERowChanging(this, new PROFILERowChangeEvent(((PROFILERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROFILERowDeleted != null)) {
                    this.PROFILERowDeleted(this, new PROFILERowChangeEvent(((PROFILERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROFILERowDeleting != null)) {
                    this.PROFILERowDeleting(this, new PROFILERowChangeEvent(((PROFILERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePROFILERow(PROFILERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsPespa ds = new DsPespa();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROFILEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROJEKTE_DATADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PROJEKTE_DATA;
            
            private System.Data.DataColumn columnID_FASADA;
            
            private System.Data.DataColumn columnID_PROFILE;
            
            private System.Data.DataColumn columnID_AKSESORE;
            
            private System.Data.DataColumn columnSASIA_COPE;
            
            private System.Data.DataColumn columnSASIA_ML;
            
            private System.Data.DataColumn columnSASIA_M2;
            
            private System.Data.DataColumn columnSASIA_KG;
            
            private System.Data.DataColumn columnID_PROJEKTE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATADataTable() {
                this.TableName = "PROJEKTE_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJEKTE_DATADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PROJEKTE_DATADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROJEKTE_DATAColumn {
                get {
                    return this.columnID_PROJEKTE_DATA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_FASADAColumn {
                get {
                    return this.columnID_FASADA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROFILEColumn {
                get {
                    return this.columnID_PROFILE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_AKSESOREColumn {
                get {
                    return this.columnID_AKSESORE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_COPEColumn {
                get {
                    return this.columnSASIA_COPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_MLColumn {
                get {
                    return this.columnSASIA_ML;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_M2Column {
                get {
                    return this.columnSASIA_M2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SASIA_KGColumn {
                get {
                    return this.columnSASIA_KG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROJEKTEColumn {
                get {
                    return this.columnID_PROJEKTE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow this[int index] {
                get {
                    return ((PROJEKTE_DATARow)(this.Rows[index]));
                }
            }
            
            public event PROJEKTE_DATARowChangeEventHandler PROJEKTE_DATARowChanging;
            
            public event PROJEKTE_DATARowChangeEventHandler PROJEKTE_DATARowChanged;
            
            public event PROJEKTE_DATARowChangeEventHandler PROJEKTE_DATARowDeleting;
            
            public event PROJEKTE_DATARowChangeEventHandler PROJEKTE_DATARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPROJEKTE_DATARow(PROJEKTE_DATARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow AddPROJEKTE_DATARow(FASADARow parentFASADARowByFASADA_PROJEKTE_DATA, PROFILERow parentPROFILERowByPROFILE_PROJEKTE_DATA, AKSESORERow parentAKSESORERowByAKSESORE_PROJEKTE_DATA, double SASIA_COPE, double SASIA_ML, double SASIA_M2, double SASIA_KG, PROJEKTERow parentPROJEKTERowByPROJEKTE_PROJEKTE_DATA) {
                PROJEKTE_DATARow rowPROJEKTE_DATARow = ((PROJEKTE_DATARow)(this.NewRow()));
                rowPROJEKTE_DATARow.ItemArray = new object[] {
                        null,
                        parentFASADARowByFASADA_PROJEKTE_DATA[0],
                        parentPROFILERowByPROFILE_PROJEKTE_DATA[0],
                        parentAKSESORERowByAKSESORE_PROJEKTE_DATA[0],
                        SASIA_COPE,
                        SASIA_ML,
                        SASIA_M2,
                        SASIA_KG,
                        parentPROJEKTERowByPROJEKTE_PROJEKTE_DATA[0]};
                this.Rows.Add(rowPROJEKTE_DATARow);
                return rowPROJEKTE_DATARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow FindByID_PROJEKTE_DATA(int ID_PROJEKTE_DATA) {
                return ((PROJEKTE_DATARow)(this.Rows.Find(new object[] {
                            ID_PROJEKTE_DATA})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PROJEKTE_DATADataTable cln = ((PROJEKTE_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PROJEKTE_DATADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PROJEKTE_DATA = base.Columns["ID_PROJEKTE_DATA"];
                this.columnID_FASADA = base.Columns["ID_FASADA"];
                this.columnID_PROFILE = base.Columns["ID_PROFILE"];
                this.columnID_AKSESORE = base.Columns["ID_AKSESORE"];
                this.columnSASIA_COPE = base.Columns["SASIA_COPE"];
                this.columnSASIA_ML = base.Columns["SASIA_ML"];
                this.columnSASIA_M2 = base.Columns["SASIA_M2"];
                this.columnSASIA_KG = base.Columns["SASIA_KG"];
                this.columnID_PROJEKTE = base.Columns["ID_PROJEKTE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PROJEKTE_DATA = new System.Data.DataColumn("ID_PROJEKTE_DATA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROJEKTE_DATA);
                this.columnID_FASADA = new System.Data.DataColumn("ID_FASADA", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_FASADA);
                this.columnID_PROFILE = new System.Data.DataColumn("ID_PROFILE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROFILE);
                this.columnID_AKSESORE = new System.Data.DataColumn("ID_AKSESORE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AKSESORE);
                this.columnSASIA_COPE = new System.Data.DataColumn("SASIA_COPE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_COPE);
                this.columnSASIA_ML = new System.Data.DataColumn("SASIA_ML", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_ML);
                this.columnSASIA_M2 = new System.Data.DataColumn("SASIA_M2", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_M2);
                this.columnSASIA_KG = new System.Data.DataColumn("SASIA_KG", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSASIA_KG);
                this.columnID_PROJEKTE = new System.Data.DataColumn("ID_PROJEKTE", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROJEKTE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PROJEKTE_DATA}, true));
                this.columnID_PROJEKTE_DATA.AutoIncrement = true;
                this.columnID_PROJEKTE_DATA.AllowDBNull = false;
                this.columnID_PROJEKTE_DATA.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow NewPROJEKTE_DATARow() {
                return ((PROJEKTE_DATARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PROJEKTE_DATARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PROJEKTE_DATARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROJEKTE_DATARowChanged != null)) {
                    this.PROJEKTE_DATARowChanged(this, new PROJEKTE_DATARowChangeEvent(((PROJEKTE_DATARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROJEKTE_DATARowChanging != null)) {
                    this.PROJEKTE_DATARowChanging(this, new PROJEKTE_DATARowChangeEvent(((PROJEKTE_DATARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROJEKTE_DATARowDeleted != null)) {
                    this.PROJEKTE_DATARowDeleted(this, new PROJEKTE_DATARowChangeEvent(((PROJEKTE_DATARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROJEKTE_DATARowDeleting != null)) {
                    this.PROJEKTE_DATARowDeleting(this, new PROJEKTE_DATARowChangeEvent(((PROJEKTE_DATARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePROJEKTE_DATARow(PROJEKTE_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsPespa ds = new DsPespa();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROJEKTE_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROJEKTEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID_PROJEKTI;
            
            private System.Data.DataColumn columnEMER_PROJEKTI;
            
            private System.Data.DataColumn columnDATA_PROJEKTI;
            
            private System.Data.DataColumn columnPREVENTIVI;
            
            private System.Data.DataColumn columnVLERA_REALE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTEDataTable() {
                this.TableName = "PROJEKTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJEKTEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PROJEKTEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_PROJEKTIColumn {
                get {
                    return this.columnID_PROJEKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMER_PROJEKTIColumn {
                get {
                    return this.columnEMER_PROJEKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DATA_PROJEKTIColumn {
                get {
                    return this.columnDATA_PROJEKTI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PREVENTIVIColumn {
                get {
                    return this.columnPREVENTIVI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VLERA_REALEColumn {
                get {
                    return this.columnVLERA_REALE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow this[int index] {
                get {
                    return ((PROJEKTERow)(this.Rows[index]));
                }
            }
            
            public event PROJEKTERowChangeEventHandler PROJEKTERowChanging;
            
            public event PROJEKTERowChangeEventHandler PROJEKTERowChanged;
            
            public event PROJEKTERowChangeEventHandler PROJEKTERowDeleting;
            
            public event PROJEKTERowChangeEventHandler PROJEKTERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPROJEKTERow(PROJEKTERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow AddPROJEKTERow(string EMER_PROJEKTI, System.DateTime DATA_PROJEKTI, decimal PREVENTIVI, decimal VLERA_REALE) {
                PROJEKTERow rowPROJEKTERow = ((PROJEKTERow)(this.NewRow()));
                rowPROJEKTERow.ItemArray = new object[] {
                        null,
                        EMER_PROJEKTI,
                        DATA_PROJEKTI,
                        PREVENTIVI,
                        VLERA_REALE};
                this.Rows.Add(rowPROJEKTERow);
                return rowPROJEKTERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow FindByID_PROJEKTI(int ID_PROJEKTI) {
                return ((PROJEKTERow)(this.Rows.Find(new object[] {
                            ID_PROJEKTI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PROJEKTEDataTable cln = ((PROJEKTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PROJEKTEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_PROJEKTI = base.Columns["ID_PROJEKTI"];
                this.columnEMER_PROJEKTI = base.Columns["EMER_PROJEKTI"];
                this.columnDATA_PROJEKTI = base.Columns["DATA_PROJEKTI"];
                this.columnPREVENTIVI = base.Columns["PREVENTIVI"];
                this.columnVLERA_REALE = base.Columns["VLERA_REALE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_PROJEKTI = new System.Data.DataColumn("ID_PROJEKTI", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PROJEKTI);
                this.columnEMER_PROJEKTI = new System.Data.DataColumn("EMER_PROJEKTI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMER_PROJEKTI);
                this.columnDATA_PROJEKTI = new System.Data.DataColumn("DATA_PROJEKTI", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_PROJEKTI);
                this.columnPREVENTIVI = new System.Data.DataColumn("PREVENTIVI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREVENTIVI);
                this.columnVLERA_REALE = new System.Data.DataColumn("VLERA_REALE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVLERA_REALE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID_PROJEKTI}, true));
                this.columnID_PROJEKTI.AutoIncrement = true;
                this.columnID_PROJEKTI.AllowDBNull = false;
                this.columnID_PROJEKTI.Unique = true;
                this.columnEMER_PROJEKTI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow NewPROJEKTERow() {
                return ((PROJEKTERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PROJEKTERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PROJEKTERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROJEKTERowChanged != null)) {
                    this.PROJEKTERowChanged(this, new PROJEKTERowChangeEvent(((PROJEKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROJEKTERowChanging != null)) {
                    this.PROJEKTERowChanging(this, new PROJEKTERowChangeEvent(((PROJEKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROJEKTERowDeleted != null)) {
                    this.PROJEKTERowDeleted(this, new PROJEKTERowChangeEvent(((PROJEKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROJEKTERowDeleting != null)) {
                    this.PROJEKTERowDeleting(this, new PROJEKTERowChangeEvent(((PROJEKTERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePROJEKTERow(PROJEKTERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DsPespa ds = new DsPespa();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROJEKTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AKSESORERow : System.Data.DataRow {
            
            private AKSESOREDataTable tableAKSESORE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AKSESORERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAKSESORE = ((AKSESOREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORI {
                get {
                    return ((int)(this[this.tableAKSESORE.ID_AKSESORIColumn]));
                }
                set {
                    this[this.tableAKSESORE.ID_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.EMER_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_AKSESORI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.EMER_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PERSHKRIM_AKSESORI {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.PERSHKRIM_AKSESORIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PERSHKRIM_AKSESORI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.PERSHKRIM_AKSESORIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESI_MATESE {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.NJESI_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESI_MATESE\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.NJESI_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CMIMI {
                get {
                    try {
                        return ((decimal)(this[this.tableAKSESORE.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FORMULA {
                get {
                    try {
                        return ((string)(this[this.tableAKSESORE.FORMULAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FORMULA\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.FORMULAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROFILI {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.ID_PROFILIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PROFILI\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.ID_PROFILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FASADA {
                get {
                    try {
                        return ((int)(this[this.tableAKSESORE.ID_FASADAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_FASADA\' in table \'AKSESORE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAKSESORE.ID_FASADAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow PROFILERow {
                get {
                    return ((PROFILERow)(this.GetParentRow(this.Table.ParentRelations["PROFILE_AKSESORE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PROFILE_AKSESORE"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow FASADARow {
                get {
                    return ((FASADARow)(this.GetParentRow(this.Table.ParentRelations["FASADA_AKSESORE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FASADA_AKSESORE"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_AKSESORINull() {
                return this.IsNull(this.tableAKSESORE.EMER_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_AKSESORINull() {
                this[this.tableAKSESORE.EMER_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPERSHKRIM_AKSESORINull() {
                return this.IsNull(this.tableAKSESORE.PERSHKRIM_AKSESORIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPERSHKRIM_AKSESORINull() {
                this[this.tableAKSESORE.PERSHKRIM_AKSESORIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESI_MATESENull() {
                return this.IsNull(this.tableAKSESORE.NJESI_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESI_MATESENull() {
                this[this.tableAKSESORE.NJESI_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tableAKSESORE.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tableAKSESORE.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFORMULANull() {
                return this.IsNull(this.tableAKSESORE.FORMULAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFORMULANull() {
                this[this.tableAKSESORE.FORMULAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PROFILINull() {
                return this.IsNull(this.tableAKSESORE.ID_PROFILIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PROFILINull() {
                this[this.tableAKSESORE.ID_PROFILIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_FASADANull() {
                return this.IsNull(this.tableAKSESORE.ID_FASADAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_FASADANull() {
                this[this.tableAKSESORE.ID_FASADAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow[] GetPROJEKTE_DATARows() {
                return ((PROJEKTE_DATARow[])(base.GetChildRows(this.Table.ChildRelations["AKSESORE_PROJEKTE_DATA"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FASADARow : System.Data.DataRow {
            
            private FASADADataTable tableFASADA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FASADARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFASADA = ((FASADADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FASADA {
                get {
                    return ((int)(this[this.tableFASADA.ID_FASADAColumn]));
                }
                set {
                    this[this.tableFASADA.ID_FASADAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_FASADA {
                get {
                    try {
                        return ((string)(this[this.tableFASADA.EMER_FASADAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_FASADA\' in table \'FASADA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFASADA.EMER_FASADAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESI_MATESE {
                get {
                    try {
                        return ((int)(this[this.tableFASADA.NJESI_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESI_MATESE\' in table \'FASADA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFASADA.NJESI_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CMIMI {
                get {
                    try {
                        return ((double)(this[this.tableFASADA.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'FASADA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFASADA.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROFILI {
                get {
                    try {
                        return ((int)(this[this.tableFASADA.ID_PROFILIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PROFILI\' in table \'FASADA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFASADA.ID_PROFILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_FASADANull() {
                return this.IsNull(this.tableFASADA.EMER_FASADAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_FASADANull() {
                this[this.tableFASADA.EMER_FASADAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESI_MATESENull() {
                return this.IsNull(this.tableFASADA.NJESI_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESI_MATESENull() {
                this[this.tableFASADA.NJESI_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tableFASADA.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tableFASADA.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PROFILINull() {
                return this.IsNull(this.tableFASADA.ID_PROFILIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PROFILINull() {
                this[this.tableFASADA.ID_PROFILIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow[] GetAKSESORERows() {
                return ((AKSESORERow[])(base.GetChildRows(this.Table.ChildRelations["FASADA_AKSESORE"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow[] GetPROJEKTE_DATARows() {
                return ((PROJEKTE_DATARow[])(base.GetChildRows(this.Table.ChildRelations["FASADA_PROJEKTE_DATA"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PROFILERow : System.Data.DataRow {
            
            private PROFILEDataTable tablePROFILE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROFILERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROFILE = ((PROFILEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROFILI {
                get {
                    return ((int)(this[this.tablePROFILE.ID_PROFILIColumn]));
                }
                set {
                    this[this.tablePROFILE.ID_PROFILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_PROFILI {
                get {
                    try {
                        return ((string)(this[this.tablePROFILE.EMER_PROFILIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_PROFILI\' in table \'PROFILE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROFILE.EMER_PROFILIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NJESI_MATESE {
                get {
                    try {
                        return ((int)(this[this.tablePROFILE.NJESI_MATESEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NJESI_MATESE\' in table \'PROFILE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROFILE.NJESI_MATESEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CMIMI {
                get {
                    try {
                        return ((double)(this[this.tablePROFILE.CMIMIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CMIMI\' in table \'PROFILE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROFILE.CMIMIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_PROFILINull() {
                return this.IsNull(this.tablePROFILE.EMER_PROFILIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_PROFILINull() {
                this[this.tablePROFILE.EMER_PROFILIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNJESI_MATESENull() {
                return this.IsNull(this.tablePROFILE.NJESI_MATESEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNJESI_MATESENull() {
                this[this.tablePROFILE.NJESI_MATESEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMIMINull() {
                return this.IsNull(this.tablePROFILE.CMIMIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMIMINull() {
                this[this.tablePROFILE.CMIMIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow[] GetAKSESORERows() {
                return ((AKSESORERow[])(base.GetChildRows(this.Table.ChildRelations["PROFILE_AKSESORE"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow[] GetPROJEKTE_DATARows() {
                return ((PROJEKTE_DATARow[])(base.GetChildRows(this.Table.ChildRelations["PROFILE_PROJEKTE_DATA"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PROJEKTE_DATARow : System.Data.DataRow {
            
            private PROJEKTE_DATADataTable tablePROJEKTE_DATA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJEKTE_DATARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROJEKTE_DATA = ((PROJEKTE_DATADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROJEKTE_DATA {
                get {
                    return ((int)(this[this.tablePROJEKTE_DATA.ID_PROJEKTE_DATAColumn]));
                }
                set {
                    this[this.tablePROJEKTE_DATA.ID_PROJEKTE_DATAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_FASADA {
                get {
                    try {
                        return ((int)(this[this.tablePROJEKTE_DATA.ID_FASADAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_FASADA\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.ID_FASADAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROFILE {
                get {
                    try {
                        return ((int)(this[this.tablePROJEKTE_DATA.ID_PROFILEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PROFILE\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.ID_PROFILEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_AKSESORE {
                get {
                    try {
                        return ((int)(this[this.tablePROJEKTE_DATA.ID_AKSESOREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_AKSESORE\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.ID_AKSESOREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_COPE {
                get {
                    try {
                        return ((double)(this[this.tablePROJEKTE_DATA.SASIA_COPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SASIA_COPE\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.SASIA_COPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_ML {
                get {
                    try {
                        return ((double)(this[this.tablePROJEKTE_DATA.SASIA_MLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SASIA_ML\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.SASIA_MLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_M2 {
                get {
                    try {
                        return ((double)(this[this.tablePROJEKTE_DATA.SASIA_M2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SASIA_M2\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.SASIA_M2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SASIA_KG {
                get {
                    try {
                        return ((double)(this[this.tablePROJEKTE_DATA.SASIA_KGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SASIA_KG\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.SASIA_KGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROJEKTE {
                get {
                    try {
                        return ((int)(this[this.tablePROJEKTE_DATA.ID_PROJEKTEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_PROJEKTE\' in table \'PROJEKTE_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE_DATA.ID_PROJEKTEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow FASADARow {
                get {
                    return ((FASADARow)(this.GetParentRow(this.Table.ParentRelations["FASADA_PROJEKTE_DATA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FASADA_PROJEKTE_DATA"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow AKSESORERow {
                get {
                    return ((AKSESORERow)(this.GetParentRow(this.Table.ParentRelations["AKSESORE_PROJEKTE_DATA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AKSESORE_PROJEKTE_DATA"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow PROFILERow {
                get {
                    return ((PROFILERow)(this.GetParentRow(this.Table.ParentRelations["PROFILE_PROJEKTE_DATA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PROFILE_PROJEKTE_DATA"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow PROJEKTERow {
                get {
                    return ((PROJEKTERow)(this.GetParentRow(this.Table.ParentRelations["PROJEKTE_PROJEKTE_DATA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PROJEKTE_PROJEKTE_DATA"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_FASADANull() {
                return this.IsNull(this.tablePROJEKTE_DATA.ID_FASADAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_FASADANull() {
                this[this.tablePROJEKTE_DATA.ID_FASADAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PROFILENull() {
                return this.IsNull(this.tablePROJEKTE_DATA.ID_PROFILEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PROFILENull() {
                this[this.tablePROJEKTE_DATA.ID_PROFILEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_AKSESORENull() {
                return this.IsNull(this.tablePROJEKTE_DATA.ID_AKSESOREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_AKSESORENull() {
                this[this.tablePROJEKTE_DATA.ID_AKSESOREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSASIA_COPENull() {
                return this.IsNull(this.tablePROJEKTE_DATA.SASIA_COPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSASIA_COPENull() {
                this[this.tablePROJEKTE_DATA.SASIA_COPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSASIA_MLNull() {
                return this.IsNull(this.tablePROJEKTE_DATA.SASIA_MLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSASIA_MLNull() {
                this[this.tablePROJEKTE_DATA.SASIA_MLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSASIA_M2Null() {
                return this.IsNull(this.tablePROJEKTE_DATA.SASIA_M2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSASIA_M2Null() {
                this[this.tablePROJEKTE_DATA.SASIA_M2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSASIA_KGNull() {
                return this.IsNull(this.tablePROJEKTE_DATA.SASIA_KGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSASIA_KGNull() {
                this[this.tablePROJEKTE_DATA.SASIA_KGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_PROJEKTENull() {
                return this.IsNull(this.tablePROJEKTE_DATA.ID_PROJEKTEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_PROJEKTENull() {
                this[this.tablePROJEKTE_DATA.ID_PROJEKTEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PROJEKTERow : System.Data.DataRow {
            
            private PROJEKTEDataTable tablePROJEKTE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROJEKTERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROJEKTE = ((PROJEKTEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_PROJEKTI {
                get {
                    return ((int)(this[this.tablePROJEKTE.ID_PROJEKTIColumn]));
                }
                set {
                    this[this.tablePROJEKTE.ID_PROJEKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMER_PROJEKTI {
                get {
                    try {
                        return ((string)(this[this.tablePROJEKTE.EMER_PROJEKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMER_PROJEKTI\' in table \'PROJEKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE.EMER_PROJEKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATA_PROJEKTI {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePROJEKTE.DATA_PROJEKTIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DATA_PROJEKTI\' in table \'PROJEKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE.DATA_PROJEKTIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PREVENTIVI {
                get {
                    try {
                        return ((decimal)(this[this.tablePROJEKTE.PREVENTIVIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PREVENTIVI\' in table \'PROJEKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE.PREVENTIVIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VLERA_REALE {
                get {
                    try {
                        return ((decimal)(this[this.tablePROJEKTE.VLERA_REALEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VLERA_REALE\' in table \'PROJEKTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROJEKTE.VLERA_REALEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMER_PROJEKTINull() {
                return this.IsNull(this.tablePROJEKTE.EMER_PROJEKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMER_PROJEKTINull() {
                this[this.tablePROJEKTE.EMER_PROJEKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_PROJEKTINull() {
                return this.IsNull(this.tablePROJEKTE.DATA_PROJEKTIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_PROJEKTINull() {
                this[this.tablePROJEKTE.DATA_PROJEKTIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREVENTIVINull() {
                return this.IsNull(this.tablePROJEKTE.PREVENTIVIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREVENTIVINull() {
                this[this.tablePROJEKTE.PREVENTIVIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVLERA_REALENull() {
                return this.IsNull(this.tablePROJEKTE.VLERA_REALEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVLERA_REALENull() {
                this[this.tablePROJEKTE.VLERA_REALEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow[] GetPROJEKTE_DATARows() {
                return ((PROJEKTE_DATARow[])(base.GetChildRows(this.Table.ChildRelations["PROJEKTE_PROJEKTE_DATA"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AKSESORERowChangeEvent : System.EventArgs {
            
            private AKSESORERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERowChangeEvent(AKSESORERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AKSESORERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FASADARowChangeEvent : System.EventArgs {
            
            private FASADARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARowChangeEvent(FASADARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FASADARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PROFILERowChangeEvent : System.EventArgs {
            
            private PROFILERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERowChangeEvent(PROFILERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROFILERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PROJEKTE_DATARowChangeEvent : System.EventArgs {
            
            private PROJEKTE_DATARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARowChangeEvent(PROJEKTE_DATARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTE_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PROJEKTERowChangeEvent : System.EventArgs {
            
            private PROJEKTERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERowChangeEvent(PROJEKTERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROJEKTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PespaFasade.DsPespaTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AKSESORETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AKSESORETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AKSESORE";
            tableMapping.ColumnMappings.Add("ID_AKSESORI", "ID_AKSESORI");
            tableMapping.ColumnMappings.Add("EMER_AKSESORI", "EMER_AKSESORI");
            tableMapping.ColumnMappings.Add("PERSHKRIM_AKSESORI", "PERSHKRIM_AKSESORI");
            tableMapping.ColumnMappings.Add("NJESI_MATESE", "NJESI_MATESE");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            tableMapping.ColumnMappings.Add("FORMULA", "FORMULA");
            tableMapping.ColumnMappings.Add("ID_PROFILI", "ID_PROFILI");
            tableMapping.ColumnMappings.Add("ID_FASADA", "ID_FASADA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `AKSESORE` WHERE ((`ID_AKSESORI` = ?) AND ((? = 1 AND `EMER_AKSESORI` IS NULL) OR (`EMER_AKSESORI` = ?)) AND ((? = 1 AND `PERSHKRIM_AKSESORI` IS NULL) OR (`PERSHKRIM_AKSESORI` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJESI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `FORMULA` IS NULL) OR (`FORMULA` = ?)) AND ((? = 1 AND `ID_PROFILI` IS NULL) OR (`ID_PROFILI` = ?)) AND ((? = 1 AND `ID_FASADA` IS NULL) OR (`ID_FASADA` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_FORMULA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `AKSESORE` (`EMER_AKSESORI`, `PERSHKRIM_AKSESORI`, `NJESI_MATESE`, `C" +
                "MIMI`, `FORMULA`, `ID_PROFILI`, `ID_FASADA`) VALUES (?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `AKSESORE` SET `EMER_AKSESORI` = ?, `PERSHKRIM_AKSESORI` = ?, `NJESI_MATESE` = ?, `CMIMI` = ?, `FORMULA` = ?, `ID_PROFILI` = ?, `ID_FASADA` = ? WHERE ((`ID_AKSESORI` = ?) AND ((? = 1 AND `EMER_AKSESORI` IS NULL) OR (`EMER_AKSESORI` = ?)) AND ((? = 1 AND `PERSHKRIM_AKSESORI` IS NULL) OR (`PERSHKRIM_AKSESORI` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJESI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `FORMULA` IS NULL) OR (`FORMULA` = ?)) AND ((? = 1 AND `ID_PROFILI` IS NULL) OR (`ID_PROFILI` = ?)) AND ((? = 1 AND `ID_FASADA` IS NULL) OR (`ID_FASADA` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_FORMULA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_FORMULA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaFasade.Properties.Settings.Default.PespaFasadeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[13];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_AKSESORI, EMER_AKSESORI, PERSHKRIM_AKSESORI, NJESI_MATESE, CMIMI, FORMU" +
                "LA, ID_PROFILI, ID_FASADA FROM AKSESORE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     ID_AKSESORI, EMER_AKSESORI, PERSHKRIM_AKSESORI, NJESI_MATESE, CMIMI, F" +
                "ORMULA, ID_PROFILI, ID_FASADA\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?" +
                ")";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ID_AKSESORI, EMER_AKSESORI, PERSHKRIM_AKSESORI, NJESI_MATESE, CMIMI, F" +
                "ORMULA, ID_PROFILI, ID_FASADA\r\nFROM         AKSESORE\r\nWHERE     (ID_FASADA = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     ID_AKSESORI, EMER_AKSESORI, PERSHKRIM_AKSESORI, NJESI_MATESE, CMIMI, F" +
                "ORMULA, ID_PROFILI, ID_FASADA\r\nFROM         AKSESORE\r\nWHERE     (ID_PROFILI = ?)" +
                "";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "INSERT INTO AKSESORE\r\n                      (EMER_AKSESORI, PERSHKRIM_AKSESORI, N" +
                "JESI_MATESE, CMIMI, FORMULA, ID_PROFILI, ID_FASADA)\r\nVALUES     (?, ?, ?, ?, ?, " +
                "?, ?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT     EMER_AKSESORI\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT     CMIMI\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[7].CommandType = System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT     FORMULA\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[8].CommandType = System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT     PERSHKRIM_AKSESORI\r\nFROM         AKSESORE\r\nWHERE     (ID_AKSESORI = ?)" +
                "";
            this._commandCollection[9].CommandType = System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE    AKSESORE\r\nSET              EMER_AKSESORI = ?, PERSHKRIM_AKSESORI = ?, N" +
                "JESI_MATESE = ?, CMIMI = ?, FORMULA = ?, ID_PROFILI = ?, ID_FASADA = ?\r\nWHERE   " +
                "  (ID_AKSESORI = ?)";
            this._commandCollection[10].CommandType = System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[11] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "UPDATE    AKSESORE\r\nSET              EMER_AKSESORI = ?, PERSHKRIM_AKSESORI = ?, C" +
                "MIMI = ?, FORMULA = ?\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[11].CommandType = System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[12] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "UPDATE    AKSESORE\r\nSET              EMER_AKSESORI = ?, PERSHKRIM_AKSESORI = ?, C" +
                "MIMI = ?, FORMULA = ?\r\nWHERE     (ID_AKSESORI = ?)";
            this._commandCollection[12].CommandType = System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_AKSESORI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new System.Data.OleDb.OleDbParameter("PERSHKRIM_AKSESORI", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PERSHKRIM_AKSESORI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new System.Data.OleDb.OleDbParameter("FORMULA", System.Data.OleDb.OleDbType.WChar, 100, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORMULA", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsPespa.AKSESOREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsPespa.AKSESOREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsPespa.AKSESOREDataTable dataTable = new DsPespa.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdAksesori(DsPespa.AKSESOREDataTable dataTable, int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.AKSESOREDataTable GetDataByIdAksesori(int ID_AKSESORI) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_AKSESORI));
            DsPespa.AKSESOREDataTable dataTable = new DsPespa.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdFasada(DsPespa.AKSESOREDataTable dataTable, System.Nullable<int> ID_FASADA) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.AKSESOREDataTable GetDataByIdFasada(System.Nullable<int> ID_FASADA) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsPespa.AKSESOREDataTable dataTable = new DsPespa.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProfili(DsPespa.AKSESOREDataTable dataTable, System.Nullable<int> ID_PROFILI) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.AKSESOREDataTable GetDataByIdProfili(System.Nullable<int> ID_PROFILI) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsPespa.AKSESOREDataTable dataTable = new DsPespa.AKSESOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa.AKSESOREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa dataSet) {
            return this.Adapter.Update(dataSet, "AKSESORE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_AKSESORI, string Original_EMER_AKSESORI, string Original_PERSHKRIM_AKSESORI, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<int> Original_CMIMI, string Original_FORMULA, System.Nullable<int> Original_ID_PROFILI, System.Nullable<int> Original_ID_FASADA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_AKSESORI));
            if ((Original_EMER_AKSESORI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER_AKSESORI));
            }
            if ((Original_PERSHKRIM_AKSESORI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PERSHKRIM_AKSESORI));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_FORMULA == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FORMULA));
            }
            if ((Original_ID_PROFILI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ID_PROFILI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_ID_FASADA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ID_FASADA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> NJESI_MATESE, System.Nullable<int> CMIMI, string FORMULA, System.Nullable<int> ID_PROFILI, System.Nullable<int> ID_FASADA) {
            if ((EMER_AKSESORI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FORMULA));
            }
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> NJESI_MATESE, System.Nullable<int> CMIMI, string FORMULA, System.Nullable<int> ID_PROFILI, System.Nullable<int> ID_FASADA, int Original_ID_AKSESORI, string Original_EMER_AKSESORI, string Original_PERSHKRIM_AKSESORI, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<int> Original_CMIMI, string Original_FORMULA, System.Nullable<int> Original_ID_PROFILI, System.Nullable<int> Original_ID_FASADA) {
            if ((EMER_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FORMULA));
            }
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_AKSESORI));
            if ((Original_EMER_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_EMER_AKSESORI));
            }
            if ((Original_PERSHKRIM_AKSESORI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PERSHKRIM_AKSESORI));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_FORMULA == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_FORMULA));
            }
            if ((Original_ID_PROFILI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID_PROFILI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_ID_FASADA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ID_FASADA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQuery(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> NJESI_MATESE, System.Nullable<int> CMIMI, string FORMULA, System.Nullable<int> ID_PROFILI, System.Nullable<int> ID_FASADA) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            if ((EMER_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                command.Parameters[3].Value = ((int)(CMIMI.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FORMULA));
            }
            if ((ID_PROFILI.HasValue == true)) {
                command.Parameters[5].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                command.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ID_FASADA.HasValue == true)) {
                command.Parameters[6].Value = ((int)(ID_FASADA.Value));
            }
            else {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQuery(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQueryByCmimi(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[7];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryFormula(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[8];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ScalarQueryPershkrimAksesori(int ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[9];
            command.Parameters[0].Value = ((int)(ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> NJESI_MATESE, System.Nullable<int> CMIMI, string FORMULA, System.Nullable<int> ID_PROFILI, System.Nullable<int> ID_FASADA, int Original_ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[10];
            if ((EMER_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                command.Parameters[3].Value = ((int)(CMIMI.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FORMULA));
            }
            if ((ID_PROFILI.HasValue == true)) {
                command.Parameters[5].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                command.Parameters[5].Value = System.DBNull.Value;
            }
            if ((ID_FASADA.HasValue == true)) {
                command.Parameters[6].Value = ((int)(ID_FASADA.Value));
            }
            else {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            command.Parameters[7].Value = ((int)(Original_ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQuery1(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> CMIMI, string FORMULA, int Original_ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[11];
            if ((EMER_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((CMIMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(CMIMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FORMULA));
            }
            command.Parameters[4].Value = ((int)(Original_ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryProfile(string EMER_AKSESORI, string PERSHKRIM_AKSESORI, System.Nullable<int> CMIMI, string FORMULA, int Original_ID_AKSESORI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[12];
            if ((EMER_AKSESORI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_AKSESORI));
            }
            if ((PERSHKRIM_AKSESORI == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PERSHKRIM_AKSESORI));
            }
            if ((CMIMI.HasValue == true)) {
                command.Parameters[2].Value = ((int)(CMIMI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((FORMULA == null)) {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FORMULA));
            }
            command.Parameters[4].Value = ((int)(Original_ID_AKSESORI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FASADATableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FASADATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FASADA";
            tableMapping.ColumnMappings.Add("ID_FASADA", "ID_FASADA");
            tableMapping.ColumnMappings.Add("EMER_FASADA", "EMER_FASADA");
            tableMapping.ColumnMappings.Add("NJESI_MATESE", "NJESI_MATESE");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            tableMapping.ColumnMappings.Add("ID_PROFILI", "ID_PROFILI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `FASADA` WHERE ((`ID_FASADA` = ?) AND ((? = 1 AND `EMER_FASADA` IS NULL) OR (`EMER_FASADA` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJESI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `ID_PROFILI` IS NULL) OR (`ID_PROFILI` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_FASADA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `FASADA` (`EMER_FASADA`, `NJESI_MATESE`, `CMIMI`, `ID_PROFILI`) VALUE" +
                "S (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_FASADA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `FASADA` SET `EMER_FASADA` = ?, `NJESI_MATESE` = ?, `CMIMI` = ?, `ID_PROFILI` = ? WHERE ((`ID_FASADA` = ?) AND ((? = 1 AND `EMER_FASADA` IS NULL) OR (`EMER_FASADA` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJESI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)) AND ((? = 1 AND `ID_PROFILI` IS NULL) OR (`ID_PROFILI` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_FASADA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_FASADA", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaFasade.Properties.Settings.Default.PespaFasadeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_FASADA, EMER_FASADA, NJESI_MATESE, CMIMI, ID_PROFILI FROM FASADA";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     CMIMI\r\nFROM         FASADA\r\nWHERE     (ID_FASADA = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsPespa.FASADADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsPespa.FASADADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsPespa.FASADADataTable dataTable = new DsPespa.FASADADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa.FASADADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa dataSet) {
            return this.Adapter.Update(dataSet, "FASADA");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_FASADA, string Original_EMER_FASADA, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<double> Original_CMIMI, System.Nullable<int> Original_ID_PROFILI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_FASADA));
            if ((Original_EMER_FASADA == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER_FASADA));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROFILI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ID_PROFILI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMER_FASADA, System.Nullable<int> NJESI_MATESE, System.Nullable<double> CMIMI, System.Nullable<int> ID_PROFILI) {
            if ((EMER_FASADA == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMER_FASADA));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMER_FASADA, System.Nullable<int> NJESI_MATESE, System.Nullable<double> CMIMI, System.Nullable<int> ID_PROFILI, int Original_ID_FASADA, string Original_EMER_FASADA, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<double> Original_CMIMI, System.Nullable<int> Original_ID_PROFILI) {
            if ((EMER_FASADA == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMER_FASADA));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_FASADA));
            if ((Original_EMER_FASADA == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMER_FASADA));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROFILI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_PROFILI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<double> ScalarQueryByCmimi(int ID_FASADA) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID_FASADA));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<double>();
            }
            else {
                return new System.Nullable<double>(((double)(returnValue)));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROFILETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PROFILETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROFILE";
            tableMapping.ColumnMappings.Add("ID_PROFILI", "ID_PROFILI");
            tableMapping.ColumnMappings.Add("EMER_PROFILI", "EMER_PROFILI");
            tableMapping.ColumnMappings.Add("NJESI_MATESE", "NJESI_MATESE");
            tableMapping.ColumnMappings.Add("CMIMI", "CMIMI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `PROFILE` WHERE ((`ID_PROFILI` = ?) AND ((? = 1 AND `EMER_PROFILI` IS" +
                " NULL) OR (`EMER_PROFILI` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJE" +
                "SI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PROFILI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PROFILE` (`EMER_PROFILI`, `NJESI_MATESE`, `CMIMI`) VALUES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROFILI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PROFILE` SET `EMER_PROFILI` = ?, `NJESI_MATESE` = ?, `CMIMI` = ? WHERE ((`ID_PROFILI` = ?) AND ((? = 1 AND `EMER_PROFILI` IS NULL) OR (`EMER_PROFILI` = ?)) AND ((? = 1 AND `NJESI_MATESE` IS NULL) OR (`NJESI_MATESE` = ?)) AND ((? = 1 AND `CMIMI` IS NULL) OR (`CMIMI` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROFILI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PROFILI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROFILI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_NJESI_MATESE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NJESI_MATESE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_CMIMI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CMIMI", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CMIMI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaFasade.Properties.Settings.Default.PespaFasadeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PROFILI, EMER_PROFILI, NJESI_MATESE, CMIMI FROM PROFILE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     CMIMI\r\nFROM         PROFILE\r\nWHERE     (ID_PROFILI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsPespa.PROFILEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsPespa.PROFILEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsPespa.PROFILEDataTable dataTable = new DsPespa.PROFILEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa.PROFILEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa dataSet) {
            return this.Adapter.Update(dataSet, "PROFILE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PROFILI, string Original_EMER_PROFILI, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<double> Original_CMIMI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PROFILI));
            if ((Original_EMER_PROFILI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER_PROFILI));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMER_PROFILI, System.Nullable<int> NJESI_MATESE, System.Nullable<double> CMIMI) {
            if ((EMER_PROFILI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMER_PROFILI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(CMIMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMER_PROFILI, System.Nullable<int> NJESI_MATESE, System.Nullable<double> CMIMI, int Original_ID_PROFILI, string Original_EMER_PROFILI, System.Nullable<int> Original_NJESI_MATESE, System.Nullable<double> Original_CMIMI) {
            if ((EMER_PROFILI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMER_PROFILI));
            }
            if ((NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_PROFILI));
            if ((Original_EMER_PROFILI == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_EMER_PROFILI));
            }
            if ((Original_NJESI_MATESE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_NJESI_MATESE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_CMIMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_CMIMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<double> ScalarQueryByCmimi(int ID_PROFILI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID_PROFILI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<double>();
            }
            else {
                return new System.Nullable<double>(((double)(returnValue)));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROJEKTE_DATATableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PROJEKTE_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROJEKTE_DATA";
            tableMapping.ColumnMappings.Add("ID_PROJEKTE_DATA", "ID_PROJEKTE_DATA");
            tableMapping.ColumnMappings.Add("ID_FASADA", "ID_FASADA");
            tableMapping.ColumnMappings.Add("ID_PROFILE", "ID_PROFILE");
            tableMapping.ColumnMappings.Add("ID_AKSESORE", "ID_AKSESORE");
            tableMapping.ColumnMappings.Add("SASIA_COPE", "SASIA_COPE");
            tableMapping.ColumnMappings.Add("SASIA_ML", "SASIA_ML");
            tableMapping.ColumnMappings.Add("SASIA_M2", "SASIA_M2");
            tableMapping.ColumnMappings.Add("SASIA_KG", "SASIA_KG");
            tableMapping.ColumnMappings.Add("ID_PROJEKTE", "ID_PROJEKTE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `PROJEKTE_DATA` WHERE ((`ID_PROJEKTE_DATA` = ?) AND ((? = 1 AND `ID_FASADA` IS NULL) OR (`ID_FASADA` = ?)) AND ((? = 1 AND `ID_PROFILE` IS NULL) OR (`ID_PROFILE` = ?)) AND ((? = 1 AND `ID_AKSESORE` IS NULL) OR (`ID_AKSESORE` = ?)) AND ((? = 1 AND `SASIA_COPE` IS NULL) OR (`SASIA_COPE` = ?)) AND ((? = 1 AND `SASIA_ML` IS NULL) OR (`SASIA_ML` = ?)) AND ((? = 1 AND `SASIA_M2` IS NULL) OR (`SASIA_M2` = ?)) AND ((? = 1 AND `SASIA_KG` IS NULL) OR (`SASIA_KG` = ?)) AND ((? = 1 AND `ID_PROJEKTE` IS NULL) OR (`ID_PROJEKTE` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTE_DATA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE_DATA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_COPE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_COPE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_ML", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_ML", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_M2", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_M2", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_KG", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_KG", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PROJEKTE_DATA` (`ID_FASADA`, `ID_PROFILE`, `ID_AKSESORE`, `SASIA_COP" +
                "E`, `SASIA_ML`, `SASIA_M2`, `SASIA_KG`, `ID_PROJEKTE`) VALUES (?, ?, ?, ?, ?, ?," +
                " ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_COPE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_ML", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_M2", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_KG", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PROJEKTE_DATA` SET `ID_FASADA` = ?, `ID_PROFILE` = ?, `ID_AKSESORE` = ?, `SASIA_COPE` = ?, `SASIA_ML` = ?, `SASIA_M2` = ?, `SASIA_KG` = ?, `ID_PROJEKTE` = ? WHERE ((`ID_PROJEKTE_DATA` = ?) AND ((? = 1 AND `ID_FASADA` IS NULL) OR (`ID_FASADA` = ?)) AND ((? = 1 AND `ID_PROFILE` IS NULL) OR (`ID_PROFILE` = ?)) AND ((? = 1 AND `ID_AKSESORE` IS NULL) OR (`ID_AKSESORE` = ?)) AND ((? = 1 AND `SASIA_COPE` IS NULL) OR (`SASIA_COPE` = ?)) AND ((? = 1 AND `SASIA_ML` IS NULL) OR (`SASIA_ML` = ?)) AND ((? = 1 AND `SASIA_M2` IS NULL) OR (`SASIA_M2` = ?)) AND ((? = 1 AND `SASIA_KG` IS NULL) OR (`SASIA_KG` = ?)) AND ((? = 1 AND `ID_PROJEKTE` IS NULL) OR (`ID_PROJEKTE` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_COPE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_ML", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_M2", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SASIA_KG", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTE_DATA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE_DATA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_FASADA", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_FASADA", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROFILE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_AKSESORE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_AKSESORE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_COPE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_COPE", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_COPE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_ML", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_ML", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_ML", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_M2", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_M2", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_M2", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_SASIA_KG", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SASIA_KG", System.Data.OleDb.OleDbType.Double, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SASIA_KG", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaFasade.Properties.Settings.Default.PespaFasadeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[4];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PROJEKTE_DATA, ID_FASADA, ID_PROFILE, ID_AKSESORE, SASIA_COPE, SASIA_ML" +
                ", SASIA_M2, SASIA_KG, ID_PROJEKTE FROM PROJEKTE_DATA";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     PROJEKTE_DATA.ID_PROJEKTE_DATA, PROJEKTE_DATA.ID_AKSESORE, PROJEKTE_DATA.SASIA, PROJEKTE_DATA.ID_PROJEKTE, 
                      AKSESORE.EMER_AKSESORI, PROJEKTE_DATA.ID_PROFILE, AKSESORE.CMIMI, AKSESORE.NJESI_MATESE
FROM         (PROJEKTE_DATA INNER JOIN
                      AKSESORE ON PROJEKTE_DATA.ID_AKSESORE = AKSESORE.ID_AKSESORI)
WHERE     (AKSESORE.ID_PROFILI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROFILI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROFILI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     PROJEKTE_DATA.ID_PROJEKTE_DATA, PROJEKTE_DATA.ID_AKSESORE, PROJEKTE_DATA.SASIA, PROJEKTE_DATA.ID_PROJEKTE, 
                      AKSESORE.EMER_AKSESORI, PROJEKTE_DATA.ID_PROFILE, AKSESORE.CMIMI, AKSESORE.NJESI_MATESE
FROM         (PROJEKTE_DATA INNER JOIN
                      AKSESORE ON PROJEKTE_DATA.ID_AKSESORE = AKSESORE.ID_AKSESORI)
WHERE     (AKSESORE.ID_PROJEKTE = ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("Param1", System.Data.OleDb.OleDbType.Variant, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ID_PROJEKTE_DATA, ID_FASADA, ID_PROFILE, ID_AKSESORE, SASIA_COPE, SASI" +
                "A_ML, SASIA_M2, SASIA_KG, ID_PROJEKTE\r\nFROM         PROJEKTE_DATA\r\nWHERE     (ID" +
                "_PROJEKTE = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTE", System.Data.DataRowVersion.Current, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsPespa.PROJEKTE_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsPespa.PROJEKTE_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsPespa.PROJEKTE_DATADataTable dataTable = new DsPespa.PROJEKTE_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProfili(DsPespa.PROJEKTE_DATADataTable dataTable, System.Nullable<int> ID_PROFILI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.PROJEKTE_DATADataTable GetDataByIdProfili(System.Nullable<int> ID_PROFILI) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ID_PROFILI.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROFILI.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsPespa.PROJEKTE_DATADataTable dataTable = new DsPespa.PROJEKTE_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProjekte(DsPespa.PROJEKTE_DATADataTable dataTable, object Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Param1 == null)) {
                throw new System.ArgumentNullException("Param1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(Param1));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.PROJEKTE_DATADataTable GetDataById_Projekte(object Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Param1 == null)) {
                throw new System.ArgumentNullException("Param1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((object)(Param1));
            }
            DsPespa.PROJEKTE_DATADataTable dataTable = new DsPespa.PROJEKTE_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProjekti(DsPespa.PROJEKTE_DATADataTable dataTable, System.Nullable<int> ID_PROJEKTE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ID_PROJEKTE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.PROJEKTE_DATADataTable GetDataByIdProjekti(System.Nullable<int> ID_PROJEKTE) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ID_PROJEKTE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            DsPespa.PROJEKTE_DATADataTable dataTable = new DsPespa.PROJEKTE_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa.PROJEKTE_DATADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa dataSet) {
            return this.Adapter.Update(dataSet, "PROJEKTE_DATA");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PROJEKTE_DATA, System.Nullable<int> Original_ID_FASADA, System.Nullable<int> Original_ID_PROFILE, System.Nullable<int> Original_ID_AKSESORE, System.Nullable<double> Original_SASIA_COPE, System.Nullable<double> Original_SASIA_ML, System.Nullable<double> Original_SASIA_M2, System.Nullable<double> Original_SASIA_KG, System.Nullable<int> Original_ID_PROJEKTE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PROJEKTE_DATA));
            if ((Original_ID_FASADA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_FASADA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROFILE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_PROFILE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_AKSESORE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_COPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_SASIA_COPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_ML.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_SASIA_ML.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_M2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_SASIA_M2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_KG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_SASIA_KG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROJEKTE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> ID_FASADA, System.Nullable<int> ID_PROFILE, System.Nullable<int> ID_AKSESORE, System.Nullable<double> SASIA_COPE, System.Nullable<double> SASIA_ML, System.Nullable<double> SASIA_M2, System.Nullable<double> SASIA_KG, System.Nullable<int> ID_PROJEKTE) {
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_PROFILE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_PROFILE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SASIA_COPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(SASIA_COPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SASIA_ML.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(SASIA_ML.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((SASIA_M2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(SASIA_M2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SASIA_KG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(SASIA_KG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((ID_PROJEKTE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<int> ID_FASADA, 
                    System.Nullable<int> ID_PROFILE, 
                    System.Nullable<int> ID_AKSESORE, 
                    System.Nullable<double> SASIA_COPE, 
                    System.Nullable<double> SASIA_ML, 
                    System.Nullable<double> SASIA_M2, 
                    System.Nullable<double> SASIA_KG, 
                    System.Nullable<int> ID_PROJEKTE, 
                    int Original_ID_PROJEKTE_DATA, 
                    System.Nullable<int> Original_ID_FASADA, 
                    System.Nullable<int> Original_ID_PROFILE, 
                    System.Nullable<int> Original_ID_AKSESORE, 
                    System.Nullable<double> Original_SASIA_COPE, 
                    System.Nullable<double> Original_SASIA_ML, 
                    System.Nullable<double> Original_SASIA_M2, 
                    System.Nullable<double> Original_SASIA_KG, 
                    System.Nullable<int> Original_ID_PROJEKTE) {
            if ((ID_FASADA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_FASADA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ID_PROFILE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_PROFILE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ID_AKSESORE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_AKSESORE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SASIA_COPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(SASIA_COPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SASIA_ML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(SASIA_ML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((SASIA_M2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(SASIA_M2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SASIA_KG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(SASIA_KG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((ID_PROJEKTE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_PROJEKTE_DATA));
            if ((Original_ID_FASADA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_FASADA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROFILE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_PROFILE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_ID_AKSESORE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID_AKSESORE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_COPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_SASIA_COPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_ML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_SASIA_ML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_M2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_SASIA_M2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_SASIA_KG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_SASIA_KG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_ID_PROJEKTE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_ID_PROJEKTE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROJEKTETableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PROJEKTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROJEKTE";
            tableMapping.ColumnMappings.Add("ID_PROJEKTI", "ID_PROJEKTI");
            tableMapping.ColumnMappings.Add("EMER_PROJEKTI", "EMER_PROJEKTI");
            tableMapping.ColumnMappings.Add("DATA_PROJEKTI", "DATA_PROJEKTI");
            tableMapping.ColumnMappings.Add("PREVENTIVI", "PREVENTIVI");
            tableMapping.ColumnMappings.Add("VLERA_REALE", "VLERA_REALE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `PROJEKTE` WHERE ((`ID_PROJEKTI` = ?) AND ((? = 1 AND `EMER_PROJEKTI` IS NULL) OR (`EMER_PROJEKTI` = ?)) AND ((? = 1 AND `DATA_PROJEKTI` IS NULL) OR (`DATA_PROJEKTI` = ?)) AND ((? = 1 AND `PREVENTIVI` IS NULL) OR (`PREVENTIVI` = ?)) AND ((? = 1 AND `VLERA_REALE` IS NULL) OR (`VLERA_REALE` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PROJEKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATA_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PREVENTIVI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_VLERA_REALE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `PROJEKTE` (`EMER_PROJEKTI`, `DATA_PROJEKTI`, `PREVENTIVI`, `VLERA_RE" +
                "ALE`) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `PROJEKTE` SET `EMER_PROJEKTI` = ?, `DATA_PROJEKTI` = ?, `PREVENTIVI` = ?, `VLERA_REALE` = ? WHERE ((`ID_PROJEKTI` = ?) AND ((? = 1 AND `EMER_PROJEKTI` IS NULL) OR (`EMER_PROJEKTI` = ?)) AND ((? = 1 AND `DATA_PROJEKTI` IS NULL) OR (`DATA_PROJEKTI` = ?)) AND ((? = 1 AND `PREVENTIVI` IS NULL) OR (`PREVENTIVI` = ?)) AND ((? = 1 AND `VLERA_REALE` IS NULL) OR (`VLERA_REALE` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_EMER_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_EMER_PROJEKTI", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_DATA_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_PREVENTIVI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_VLERA_REALE", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::PespaFasade.Properties.Settings.Default.PespaFasadeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[9];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PROJEKTI, EMER_PROJEKTI, DATA_PROJEKTI, PREVENTIVI, VLERA_REALE FROM PR" +
                "OJEKTE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"DELETE FROM PROJEKTE
WHERE     (ID_PROJEKTI = ?) AND (? = 1) AND (EMER_PROJEKTI IS NULL) AND (? = 1) AND (DATA_PROJEKTI IS NULL) OR
                      (ID_PROJEKTI = ?) AND (EMER_PROJEKTI = ?) AND (DATA_PROJEKTI IS NULL) AND (? = 1) OR
                      (ID_PROJEKTI = ?) AND (EMER_PROJEKTI IS NULL) AND (DATA_PROJEKTI = ?) AND (? = 1) OR
                      (ID_PROJEKTI = ?) AND (EMER_PROJEKTI = ?) AND (DATA_PROJEKTI = ?)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("Param2", System.Data.OleDb.OleDbType.VarChar, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("Param3", System.Data.OleDb.OleDbType.VarChar, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI1", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("Param6", System.Data.OleDb.OleDbType.VarChar, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI2", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("Param9", System.Data.OleDb.OleDbType.VarChar, 1024, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI3", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI1", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI1", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM PROJEKTE\r\nWHERE     (ID_PROJEKTI = ?)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ID_PROJEKTI, EMER_PROJEKTI, DATA_PROJEKTI, PREVENTIVI, VLERA_REALE\r\nFR" +
                "OM         PROJEKTE\r\nWHERE     (ID_PROJEKTI = ?)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "INSERT INTO `PROJEKTE` (`EMER_PROJEKTI`, `DATA_PROJEKTI`, `PREVENTIVI`, `VLERA_RE" +
                "ALE`) VALUES (?, ?, ?, ?)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new System.Data.OleDb.OleDbParameter("VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "INSERT INTO `PROJEKTE` (`EMER_PROJEKTI`, `DATA_PROJEKTI`) VALUES (?, ?)";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("EMER_PROJEKTI", System.Data.OleDb.OleDbType.WChar, 50, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMER_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new System.Data.OleDb.OleDbParameter("DATA_PROJEKTI", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATA_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT     VLERA_REALE\r\nFROM         PROJEKTE\r\nWHERE     (ID_PROJEKTI = ?)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.OleDb.OleDbParameter("ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "UPDATE    PROJEKTE\r\nSET              PREVENTIVI = ?\r\nWHERE     (ID_PROJEKTI = ?)";
            this._commandCollection[7].CommandType = System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new System.Data.OleDb.OleDbParameter("PREVENTIVI", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "PREVENTIVI", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[8] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "UPDATE    PROJEKTE\r\nSET              VLERA_REALE = ?\r\nWHERE     (ID_PROJEKTI = ?)" +
                "";
            this._commandCollection[8].CommandType = System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("VLERA_REALE", System.Data.OleDb.OleDbType.Currency, 0, System.Data.ParameterDirection.Input, ((byte)(19)), ((byte)(0)), "VLERA_REALE", System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID_PROJEKTI", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID_PROJEKTI", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsPespa.PROJEKTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsPespa.PROJEKTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsPespa.PROJEKTEDataTable dataTable = new DsPespa.PROJEKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdProjekti(DsPespa.PROJEKTEDataTable dataTable, int ID_PROJEKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROJEKTI));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DsPespa.PROJEKTEDataTable GetDataByIdProjekti(int ID_PROJEKTI) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID_PROJEKTI));
            DsPespa.PROJEKTEDataTable dataTable = new DsPespa.PROJEKTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa.PROJEKTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsPespa dataSet) {
            return this.Adapter.Update(dataSet, "PROJEKTE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PROJEKTI, string Original_EMER_PROJEKTI, System.Nullable<System.DateTime> Original_DATA_PROJEKTI, System.Nullable<decimal> Original_PREVENTIVI, System.Nullable<decimal> Original_VLERA_REALE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PROJEKTI));
            if ((Original_EMER_PROJEKTI == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMER_PROJEKTI));
            }
            if ((Original_DATA_PROJEKTI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATA_PROJEKTI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_PREVENTIVI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PREVENTIVI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_VLERA_REALE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_VLERA_REALE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMER_PROJEKTI, System.Nullable<System.DateTime> DATA_PROJEKTI, System.Nullable<decimal> PREVENTIVI, System.Nullable<decimal> VLERA_REALE) {
            if ((EMER_PROJEKTI == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMER_PROJEKTI));
            }
            if ((DATA_PROJEKTI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATA_PROJEKTI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((PREVENTIVI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PREVENTIVI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((VLERA_REALE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(VLERA_REALE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMER_PROJEKTI, System.Nullable<System.DateTime> DATA_PROJEKTI, System.Nullable<decimal> PREVENTIVI, System.Nullable<decimal> VLERA_REALE, int Original_ID_PROJEKTI, string Original_EMER_PROJEKTI, System.Nullable<System.DateTime> Original_DATA_PROJEKTI, System.Nullable<decimal> Original_PREVENTIVI, System.Nullable<decimal> Original_VLERA_REALE) {
            if ((EMER_PROJEKTI == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMER_PROJEKTI));
            }
            if ((DATA_PROJEKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATA_PROJEKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((PREVENTIVI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PREVENTIVI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((VLERA_REALE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(VLERA_REALE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_PROJEKTI));
            if ((Original_EMER_PROJEKTI == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMER_PROJEKTI));
            }
            if ((Original_DATA_PROJEKTI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_DATA_PROJEKTI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_PREVENTIVI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_PREVENTIVI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_VLERA_REALE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_VLERA_REALE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQuery(int ID_PROJEKTI, string Param2, string Param3, int ID_PROJEKTI1, string EMER_PROJEKTI, string Param6, int ID_PROJEKTI2, System.Nullable<System.DateTime> DATA_PROJEKTI, string Param9, int ID_PROJEKTI3, string EMER_PROJEKTI1, System.Nullable<System.DateTime> DATA_PROJEKTI1) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID_PROJEKTI));
            if ((Param2 == null)) {
                throw new System.ArgumentNullException("Param2");
            }
            else {
                command.Parameters[1].Value = ((string)(Param2));
            }
            if ((Param3 == null)) {
                throw new System.ArgumentNullException("Param3");
            }
            else {
                command.Parameters[2].Value = ((string)(Param3));
            }
            command.Parameters[3].Value = ((int)(ID_PROJEKTI1));
            if ((EMER_PROJEKTI == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(EMER_PROJEKTI));
            }
            if ((Param6 == null)) {
                throw new System.ArgumentNullException("Param6");
            }
            else {
                command.Parameters[5].Value = ((string)(Param6));
            }
            command.Parameters[6].Value = ((int)(ID_PROJEKTI2));
            if ((DATA_PROJEKTI.HasValue == true)) {
                command.Parameters[7].Value = ((System.DateTime)(DATA_PROJEKTI.Value));
            }
            else {
                command.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Param9 == null)) {
                throw new System.ArgumentNullException("Param9");
            }
            else {
                command.Parameters[8].Value = ((string)(Param9));
            }
            command.Parameters[9].Value = ((int)(ID_PROJEKTI3));
            if ((EMER_PROJEKTI1 == null)) {
                command.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(EMER_PROJEKTI1));
            }
            if ((DATA_PROJEKTI1.HasValue == true)) {
                command.Parameters[11].Value = ((System.DateTime)(DATA_PROJEKTI1.Value));
            }
            else {
                command.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteQueryByIdProjekti(int ID_PROJEKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(ID_PROJEKTI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string EMER_PROJEKTI, System.Nullable<System.DateTime> DATA_PROJEKTI, System.Nullable<decimal> PREVENTIVI, System.Nullable<decimal> VLERA_REALE) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[4];
            if ((EMER_PROJEKTI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_PROJEKTI));
            }
            if ((DATA_PROJEKTI.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(DATA_PROJEKTI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            if ((PREVENTIVI.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(PREVENTIVI.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((VLERA_REALE.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(VLERA_REALE.Value));
            }
            else {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery1(string EMER_PROJEKTI, System.Nullable<System.DateTime> DATA_PROJEKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[5];
            if ((EMER_PROJEKTI == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(EMER_PROJEKTI));
            }
            if ((DATA_PROJEKTI.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(DATA_PROJEKTI.Value));
            }
            else {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<decimal> ScalarQueryByCmimi(int ID_PROJEKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((int)(ID_PROJEKTI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<decimal>();
            }
            else {
                return new System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryByPreventivi(System.Nullable<decimal> PREVENTIVI, int Original_ID_PROJEKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[7];
            if ((PREVENTIVI.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(PREVENTIVI.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_ID_PROJEKTI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateQueryByVleraReale(System.Nullable<decimal> VLERA_REALE, int Original_ID_PROJEKTI) {
            System.Data.OleDb.OleDbCommand command = this.CommandCollection[8];
            if ((VLERA_REALE.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(VLERA_REALE.Value));
            }
            else {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            command.Parameters[1].Value = ((int)(Original_ID_PROJEKTI));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591